version: 0.2

env:
  variables:
    git_url: git@github.com:GreyHelixIO/GH-Deploy.git
  secrets-manager:
    ssh_key: arn:aws:secretsmanager:us-east-1:455667379642:secret:gh-deploy-ssh-key-2adter:gh_id_rsa
    ssh_pub: arn:aws:secretsmanager:us-east-1:455667379642:secret:gh-deploy-ssh-key-2adter:gh_id_rsa_pub
    TF_VAR_AWS_ID: arn:aws:secretsmanager:us-east-1:455667379642:secret:gh-global-terraform-SgEFp1:AWS_ID
    TF_VAR_AWS_SECRET: arn:aws:secretsmanager:us-east-1:455667379642:secret:gh-global-terraform-SgEFp1:AWS_SECRET

phases:
  pre-build:
    commands:
      - mkdir -p ~/.ssh
      - echo "$ssh_key" > ~/.ssh/id_rsa
      - echo "$ssh_pub" > ~/.ssh/id_rsa.pub
      - chmod 600 ~/.ssh/id_rsa
      - eval "$(ssh-agent -s)"
      - git init
      - git remote add origin "$git_url"
      - git fetch origin
      - git branch
      - git checkout -f "$CODEBUILD_RESOLVED_SOURCE_VERSION"
      - git submodule init
      - git submodule update --recursive

  build:
    commands:
      - cd ./GHApi
      - docker build . -t test
      # - export DOCKER_PUSH_URL=$ECR_URL:$CODEBUILD_RESOLVED_SOURCE_VERSION
      # - export ECR_URI=${ECR_URL%/*}
      # - cd ./src/CryptoSoundAPI
      # - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $ECR_URI
      # - docker build --build-arg PORT=$PORT . -t cs-api
      # - docker tag cs-api $DOCKER_PUSH_URL
      # - docker push $DOCKER_PUSH_URL
      # - cd ../../src/CryptoSoundUI
      # - npm install
      # - npm run generate

artifacts:
  files:
    - '**/*'